#!/usr/bin/env bash
# bin/compile <build_dir> <cache_dir> <env_dir>

base_dir="${PWD}"
build_dir="${1}"
cache_dir="${2}"
env_dir="${3}"

echo "base_dir ${base_dir}"
echo "build_dir ${build_dir}"
echo "cache_dir ${cache_dir}"
echo "env_dir ${env_dir}"

export GRADLE_USER_HOME="${cache_dir}/.gradle"

java_dir="${cache_dir}/jdk-11.0.2"
java_tarball="${java_dir}.tar.gz"

export_env_dir() {
  env_dir=$1
  acceptlist_regex=${2:-''}
  denylist_regex=${3:-'^(PATH|GIT_DIR|CPATH|CPPATH|LD_PRELOAD|LIBRARY_PATH)$'}
  if [[ -d "$env_dir" ]]; then
    for e in $(ls $env_dir); do
      echo "$e" | grep -E "$acceptlist_regex" | grep -qvE "$denylist_regex" &&
      export "$e=$(cat $env_dir/$e)"
      :
    done
  fi
}

init() {
  if [[ ! -d "${cache_dir}" ]]; then
    mkdir -p "${cache_dir}"
  fi
}

install_java() {
  if [[ -d "${java_dir}" ]]; then
    echo "Using ${java_dir}"
  else
    echo "Installing OpenJDK 11"
    
    if [[ ! -f "${java_tarball}" ]]; then
      curl -L https://download.java.net/java/GA/jdk11/9/GPL/openjdk-11.0.2_linux-x64_bin.tar.gz -o "${java_tarball}"
    fi

    tar -xvzf "${java_tarball}" -C "${cache_dir}"
  fi

  export JAVA_HOME="${java_dir}"
  export PATH="${PATH}:${JAVA_HOME}/bin"
}

run_gradle_target() {
  build_target=${BUILD_TARGET:-build}

  echo "Using build target ${build_target}"

  cd "${build_dir}"

  ./gradlew "${build_target}"
}

move_tar() {
  mkdir -p "${build_dir}/build/out"

  for f in $(find "${build_dir}/build/distributions" -name "*.tar"); do
    tar -xvzf "${f}" -C "${build_dir}/build/out"

    dir=$(basename "${f}" | sed 's|\.tar||g')

    mv -f "${build_dir}/build/out/${dir}/bin" "${build_dir}/bin"
    mv -f "${build_dir}/build/out/${dir}/lib" "${build_dir}/lib"

    break
  done

  # find "${build_dir}" -maxdepth 1 -type f -delete
  # rm -rf "${build_dir}/build" "${build_dir}/src" "${build_dir}/gradle" "${build_dir}/.git" "${build_dir}/.github" "${build_dir}/.idea"
}

setup_procfile() {
  for f in $(find "${build_dir}/bin" -type f | grep -v '.bat'); do
    binary=$(basename "${f}")

    DYNO_TYPE=${DYNO_TYPE:-worker}

    echo "${DYNO_TYPE}: bin/${binary}" >> "${build_dir}/Procfile"
  done
}

main() {
  init
  export_env_dir
  install_java
  run_gradle_target
  move_tar
  setup_procfile
}

main

